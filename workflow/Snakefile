from scripts.workflow_utils import get_samples

sample_table, SAMPLE = get_samples(config["path"]["samples"])

onstart:
    touch(config["path"]["temp"])
    touch(config["path"]["log"])
    print("Samples: " + ", ".join(SAMPLE))

onsuccess:
    print("Workflow finished successfully!")

onerror:
    print("Error has occured. Please check log files for more details.")

module setup_db:
    snakefile:
        "rules/setup_db.smk"
    config:
        config

module qc:
    snakefile:
        "rules/qc.smk"
    config:
        config

module assembly:
        snakefile:
                "rules/assembly.smk"
        config:
                config

module identification:
        snakefile:
                "rules/identification.smk"
        config:
                config

module mapping:
        snakefile:
                "rules/mapping.smk"
        config:
                config

module taxonomy:
        snakefile:
                "rules/taxonomy.smk"
        config:
                config

module function:
        snakefile:
                "rules/function.smk"
        config:
                config

module stats:
        snakefile:
                "rules/stats.smk"
        config:
                config

use rule * from setup_db
use rule * from qc
use rule * from assembly
use rule * from identification
use rule * from mapping
use rule * from taxonomy
use rule * from function
use rule * from stats

rule ALL:
    input:
        config["path"]["temp"] + "/finished_QC" if config["rule_inclusion"]["all"]["qc"] else [],
        config["path"]["temp"] + "/finished_ASSEMBLY" if config["rule_inclusion"]["all"]["assembly"] else [],
        config["path"]["temp"] + "/finished_IDENTIFICATION" if config["rule_inclusion"]["all"]["identification"] else [],
        config["path"]["temp"] + "/finished_MAPPING" if config["rule_inclusion"]["all"]["mapping"] else [],
        config["path"]["temp"] + "/finished_TAXONOMY" if config["rule_inclusion"]["all"]["taxonomy"] else [],
        config["path"]["temp"] + "/finished_FUNCTION" if config["rule_inclusion"]["all"]["function"] else [],
        config["path"]["temp"] + "/finished_STATS" if config["rule_inclusion"]["all"]["stats"] else [],
    params:
        temp=config["path"]["temp"],
    threads: 1
    resources:
        mem_mb=config["memory"]["small"],
        runtime=config["time"]["tiny"],
    shell:
        """
        rm -rdf {params.temp}
        """
